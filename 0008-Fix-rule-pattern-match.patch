From 5ad6bf5716694fe1dec16996e6f9f568dbf1254e Mon Sep 17 00:00:00 2001
From: Michal Sekletar <msekleta@redhat.com>
Date: Wed, 27 Jan 2016 15:23:48 +0100
Subject: [PATCH] Fix rule pattern match

We need to also check for NAME in already generated rules. Thus we
only look for exactly the same entry as we are about to write. Otherwise
renaming of interfaces (to names generated by external
tool) after system installation will not work.

Consider following reproducer,
1) install system
2) reboot
3) rename /etc/sysconfig/network-scripts/ifcfg-eth0 -> /etc/sysconfig/network-scripts/ifcfg-foobar
4) change DEVICE from eth0 to foobar
5) reboot
6) observe that interface name is not changed

Related: #652499
---
 extras/rule_generator/write_net_rules | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/extras/rule_generator/write_net_rules b/extras/rule_generator/write_net_rules
index 40d5266..98144e1 100644
--- a/extras/rule_generator/write_net_rules
+++ b/extras/rule_generator/write_net_rules
@@ -133,17 +133,6 @@ fi
 basename=${INTERFACE%%[0-9]*}
 match="$match, KERNEL==\"$basename*\""
 
-# build a regular expression that matches the new rule that we want to write
-new_rule_pattern=$(echo "^SUBSYSTEM==\"net\", ACTION==\"add\"$match" | sed -re 's/([\?\*\{\}])/\\\1/g')
-
-# Double check if the new rule has already been written. This happens if
-# multiple add events are generated before the script returns and udevd
-# renames the interfaces. See #765577 for details.
-if egrep -qs "$new_rule_pattern" $RO_RULES_FILE $RULES_FILE; then
-	unlock_rules_file
-	exit 0
-fi
-
 if [ "$INTERFACE_NAME" ]; then
 	# external tools may request a custom name
 	COMMENT="$COMMENT (custom name provided by external tool)"
@@ -161,6 +150,17 @@ else
 	fi
 fi
 
+# build a regular expression that matches the new rule that we want to write
+new_rule_pattern=$(echo "^SUBSYSTEM==\"net\", ACTION==\"add\"$match, NAME=\"$INTERFACE\"$" | sed -re 's/([\?\*\{\}])/\\\1/g')
+
+# Double check if the new rule has already been written. This happens if
+# multiple add events are generated before the script returns and udevd
+# renames the interfaces. See #765577 for details.
+if egrep -qs "$new_rule_pattern" $RO_RULES_FILE $RULES_FILE; then
+	unlock_rules_file
+	exit 0
+fi
+
 write_rule "$match" "$INTERFACE" "$COMMENT"
 
 unlock_rules_file
-- 
2.5.0

